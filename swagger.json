{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Connections API"
  },
  "consumers": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://fullstackforce.onrender.com/api"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operation about users"
    },
    {
      "name": "pet",
      "description": "Operation about pets"
    },
    {
      "name": "notice",
      "description": "Operation about notices"
    },
    {
      "name": "friend",
      "description": "Operation about friends"
    },
    {
      "name": "news",
      "description": "Operation about news"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["user"],
        "summary": "Add a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Provided email alredy exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["user"],
        "summary": "Login user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["user"],
        "summary": "Logout user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": null
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["user"],
        "summary": "Get information about current user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "patch": {
        "tags": ["user"],
        "summary": "Update information about current user and avatars",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchRequestWithFile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },

    "/pets": {
      "get": {
        "tags": ["pet"],
        "summary": "Get information about current user's pets",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "strings",
            "description": "Limit"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["pet"],
        "summary": "Add new a pet",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PetRequestWithFile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"name\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{id}": {
      "delete": {
        "tags": ["pet"],
        "summary": "Delete pet by petId ",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Pet's id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Delete success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Delete success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"field's name\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },

    "/notices": {
      "get": {
        "tags": ["notice"],
        "summary": "Get list all notices",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "strings",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "title",
            "required": false,
            "type": "strings",
            "description": "Title"
          },
          {
            "in": "query",
            "name": "category",
            "required": false,
            "type": "strings",
            "description": "Category"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["notice"],
        "summary": "Add new notice",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NoticeRequestWithFile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"field's name\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/notices/{id}": {
      "get": {
        "tags": ["notice"],
        "summary": "Get notice by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Notice's id for get information"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeAndUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"field's name\" is required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["notice"],
        "summary": "Delete notice by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Notice's id for deleting"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Delete success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Delete success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "4132413241324123 is not valid id"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found or The notice belongs to another user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/notices/users": {
      "get": {
        "tags": ["notice"],
        "summary": "Get list all notices created current user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "strings",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "title",
            "required": false,
            "type": "strings",
            "description": "Title"
          },
          {
            "in": "query",
            "name": "category",
            "required": false,
            "type": "strings",
            "description": "Category"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"field's name\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/notices/favorites": {
      "get": {
        "tags": ["notice"],
        "summary": "Get list all favorites notices for current user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "strings",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "title",
            "required": false,
            "type": "strings",
            "description": "Title"
          },
          {
            "in": "query",
            "name": "category",
            "required": false,
            "type": "strings",
            "description": "Category"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesFavoritesListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"field's name\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/notices/{id}/favorites": {
      "patch": {
        "tags": ["notice"],
        "summary": "Add notice with ID to favorites collection current user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Notice's id for add to favorites collection current user"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "The notice has been successfully added to your favorites"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"field's name\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found or The notice belongs to another user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["notice"],
        "summary": "Delete notice by ID from favorites collection current user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Notice's id for remove from favorites collection current user"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Delete success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Delete success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"field's name\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found or The notice belongs to another user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },

    "/friends": {
      "get": {
        "tags": ["friend"],
        "summary": "Get list friends",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "strings",
            "description": "Limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },

    "/news": {
      "get": {
        "tags": ["news"],
        "summary": "Get list friends",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "strings",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "title",
            "required": false,
            "type": "strings",
            "description": "keyword from news title "
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserRegisterRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mango1"
          },
          "email": {
            "type": "string",
            "example": "mango1@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "Qwerty123"
          }
        }
      },
      "UserLoginRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "mango5@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "123457"
          }
        }
      },
      "UserAuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YmJhMzlkMTM4ZmVjMDBhZGRlMmI0NyIsImlhdCI6MTY5MDI4ODA5NywiZXhwIjoxNjkwMzc0NDk3fQ.JTsGap1ZHv3lrwvTHhbApAQrC4ED_l0DH40yDYtINhk"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Mango1"
              },
              "email": {
                "type": "string",
                "example": "mango1@gmail.com",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "example": "https://res.cloudinary.com/duz0fredh/image/upload/v1690286198/users/64bba39d138fec00adde2b47_.jpg"
              }
            }
          }
        }
      },
      "UserPatchRequest": {
        "required": ["name", "email"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mango1"
          },
          "email": {
            "type": "string",
            "example": "mango1@gmail.com",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "phone": {
            "type": "string",
            "example": "+380000000000"
          },
          "city": {
            "type": "string",
            "example": "Kiev"
          }
        }
      },
      "UserPatchRequestWithFile": {
        "required": ["name", "email"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mango1"
          },
          "email": {
            "type": "string",
            "example": "mango1@gmail.com",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "phone": {
            "type": "string",
            "example": "+380000000000"
          },
          "city": {
            "type": "string",
            "example": "Kiev"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UserPatchResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mango1"
          },
          "email": {
            "type": "string",
            "example": "mango1@gmail.com",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "phone": {
            "type": "string",
            "example": "+380000000000"
          },
          "city": {
            "type": "string",
            "example": "Kiev"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png"
          }
        }
      },

      "PetRequest": {
        "required": ["name", "birthday", "type"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "birthday of animal"
          },
          "type": {
            "type": "string",
            "description": "breed of animal"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "PetRequestWithFile": {
        "required": ["name", "birthday", "type", "avatar"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "birthday of animal"
          },
          "type": {
            "type": "string",
            "description": "breed of animal"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "PetResponse": {
        "type": "object",
        "properties": {
          "pet": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Backend-generated unique identifier."
              },
              "ownerId": {
                "type": "string",
                "description": "Backend get from token user."
              },
              "name": {
                "type": "string"
              },
              "birthday": {
                "type": "string",
                "description": "Pet's birthday "
              },
              "type": {
                "type": "string",
                "description": "breed of animal"
              },
              "avatarURL": {
                "type": "string",
                "description": "URL to pet's avatar"
              },
              "comments": {
                "type": "string"
              },
              "creqtedAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "pet": {
            "owner": "64bba39d138fec00adde2b47",
            "name": "Triam",
            "birthday": "22-11-2022",
            "type": "wild",
            "comments": "sdfsdfsdfsdf",
            "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png",
            "_id": "64c2d1f48a2dcdcd3d76629b",
            "createdAt": "2023-07-27T20:22:12.511Z",
            "updatedAt": "2023-07-27T20:22:12.511Z"
          }
        }
      },
      "PetsListResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Backend-generated unique identifier."
            },
            "ownerId": {
              "type": "string",
              "description": "Backend get from token user."
            },
            "name": {
              "type": "string"
            },
            "birthday": {
              "type": "string",
              "description": "тут треба подумати чи дату чи техт"
            },
            "type": {
              "type": "string",
              "description": "breed of animal"
            },
            "avatarURL": {
              "type": "string"
            },
            "comments": {
              "type": "string"
            }
          }
        },
        "example": [
          {
            "_id": "64bbc0c90d50f7d0800e272a",
            "owner": "64bba39d138fec00adde2b47",
            "name": "Vista",
            "birthday": "01.01.2001",
            "type": "Pers",
            "comments": "",
            "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png"
          },
          {
            "_id": "64bbc8a9580ab0914768a763",
            "owner": "64bba39d138fec00adde2b47",
            "name": "Vista",
            "birthday": "01.01.2001",
            "type": "Pers",
            "comments": "",
            "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png"
          }
        ]
      },

      "NoticeRequest": {
        "required": [
          "category",
          "name",
          "birthday",
          "type",
          "title",
          "sex",
          "location"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"]
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "birthday of animal"
          },
          "type": {
            "type": "string",
            "description": "breed of animal"
          },
          "title": {
            "type": "string",
            "example": "Cute dog looking for a home"
          },
          "comments": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": ["femail", "mail"]
          },
          "price": {
            "type": "number"
          }
        },
        "example": {
          "category": "sell",
          "name": "Ttriksy",
          "birthday": "23-03-21",
          "type": "seberian",
          "title": "Dog & cat & mouse",
          "sex": "female",
          "location": "Brovary"
        }
      },
      "NoticeRequestWithFile": {
        "required": [
          "category",
          "name",
          "birthday",
          "type",
          "title",
          "sex",
          "location",
          "avatar"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"]
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "birthday of animal"
          },
          "type": {
            "type": "string",
            "description": "breed of animal"
          },
          "title": {
            "type": "string",
            "example": "Cute dog looking for a home"
          },
          "comments": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": ["femail", "mail"]
          },
          "location": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "NoticesListResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "notices": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Backend-generated unique identifier."
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "Backend get from token user."
                  },
                  "category": {
                    "type": "string",
                    "enum": ["sell", "lost-found", "for-free"]
                  },
                  "name": {
                    "type": "string"
                  },
                  "birthday": {
                    "type": "string",
                    "description": "birthday of animal"
                  },
                  "type": {
                    "type": "string",
                    "description": "breed of animal"
                  },
                  "avatarURL": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string",
                    "example": "Cute dog looking for a home"
                  },
                  "comments": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "sex": {
                    "type": "string",
                    "enum": ["femail", "mail"]
                  },
                  "price": {
                    "type": "number"
                  },
                  "favorite": {
                    "type": "boolean"
                  }
                }
              }
            },
            "totalCount": {
              "type": "string",
              "description": "Total count records in DB"
            },
            "page": {
              "type": "integer",
              "description": "Page number"
            },
            "perPage": {
              "type": "integer",
              "description": "Items per page"
            }
          }
        },
        "example": [
          {
            "notices": [
              {
                "_id": "64bd804ac565ed4e984b8075",
                "owner": "64bba39d138fec00adde2b47",
                "category": "sell",
                "name": "Ttriksy",
                "birthday": "23-03-21",
                "type": "seberian",
                "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png",
                "title": "Dog & cat & mouse",
                "sex": "female",
                "price": 0,
                "comments": "",
                "location": "Brovary",
                "favorite": false
              },
              {
                "_id": "64bfc3f2aa599bb2b6ee71f0",
                "owner": "64bba39d138fec00adde2b47",
                "category": "for-free",
                "name": "Lazy",
                "birthday": "25-02-2022",
                "type": "green",
                "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png",
                "sex": "female",
                "price": 0,
                "comments": "",
                "location": "New York",
                "favorite": false
              }
            ],
            "totalCount": 8,
            "page": "1",
            "perPage": "2"
          }
        ]
      },
      "NoticesFavoritesListResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "favorites": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Backend-generated unique identifier."
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "Backend get from token user."
                  },
                  "category": {
                    "type": "string",
                    "enum": ["sell", "lost-found", "for-free"]
                  },
                  "name": {
                    "type": "string"
                  },
                  "birthday": {
                    "type": "string",
                    "description": "birthday of animal"
                  },
                  "type": {
                    "type": "string",
                    "description": "breed of animal"
                  },
                  "avatarURL": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string",
                    "example": "Cute dog looking for a home"
                  },
                  "comments": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "sex": {
                    "type": "string",
                    "enum": ["femail", "mail"]
                  },
                  "price": {
                    "type": "number"
                  },
                  "favorite": {
                    "type": "boolean"
                  }
                }
              }
            },
            "totalCount": {
              "type": "string",
              "description": "Total count records in DB"
            },
            "page": {
              "type": "integer",
              "description": "Page number"
            },
            "perPage": {
              "type": "integer",
              "description": "Items per page"
            }
          }
        },
        "example": [
          {
            "favorites": [
              {
                "_id": "64bd804ac565ed4e984b8075",
                "owner": "64bba39d138fec00adde2b47",
                "category": "sell",
                "name": "Ttriksy",
                "birthday": "23-03-21",
                "type": "seberian",
                "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png",
                "title": "Dog & cat & mouse",
                "sex": "female",
                "price": 0,
                "comments": "",
                "location": "Brovary",
                "favorite": false
              },
              {
                "_id": "64bfc3f2aa599bb2b6ee71f0",
                "owner": "64bba39d138fec00adde2b47",
                "category": "for-free",
                "name": "Lazy",
                "birthday": "25-02-2022",
                "type": "green",
                "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png",
                "sex": "female",
                "price": 0,
                "comments": "",
                "location": "New York",
                "favorite": false
              }
            ],
            "totalCount": 8,
            "page": "1",
            "perPage": "2"
          }
        ]
      },
      "NoticeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Backend-generated unique identifier."
          },
          "ownerId": {
            "type": "string",
            "description": "Backend get from token user."
          },
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"]
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "birthday of animal"
          },
          "type": {
            "type": "string",
            "description": "breed of animal"
          },
          "avatarURL": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "example": "Cute dog looking for a home"
          },
          "comments": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": ["femail", "mail"]
          },
          "price": {
            "type": "number"
          },
          "favorite": {
            "type": "boolean"
          }
        },
        "example": {
          "notice": {
            "_id": "64bd804ac565ed4e984b8075",
            "owner": "64bba39d138fec00adde2b47",
            "category": "sell",
            "name": "Ttriksy",
            "birthday": "23-03-21",
            "type": "seberian",
            "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png",
            "title": "Dog & cat & mouse",
            "sex": "female",
            "price": 0,
            "comments": "",
            "location": "Brovary",
            "favorite": false
          }
        }
      },
      "NoticeAndUserResponse": {
        "type": "object",
        "properties": {
          "notice": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Backend-generated unique identifier."
              },
              "ownerId": {
                "type": "string",
                "description": "Backend get from token user."
              },
              "category": {
                "type": "string",
                "enum": ["sell", "lost-found", "for-free"]
              },
              "name": {
                "type": "string"
              },
              "birthday": {
                "type": "string",
                "description": "birthday of animal"
              },
              "type": {
                "type": "string",
                "description": "breed of animal"
              },
              "avatarURL": {
                "type": "string"
              },
              "title": {
                "type": "string",
                "example": "Cute dog looking for a home"
              },
              "comments": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "sex": {
                "type": "string",
                "enum": ["femail", "mail"]
              },
              "price": {
                "type": "number"
              },
              "favorite": {
                "type": "boolean"
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "notice": {
            "_id": "64bd804ac565ed4e984b8075",
            "owner": "64bba39d138fec00adde2b47",
            "category": "sell",
            "name": "Ttriksy",
            "birthday": "23-03-21",
            "type": "seberian",
            "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png",
            "title": "Dog & cat & mouse",
            "sex": "female",
            "price": 0,
            "comments": "",
            "location": "Brovary",
            "favorite": false
          },
          "user": {
            "_id": "64bba39d138fec00adde2b47",
            "email": "mango5@gmail.com",
            "phone": "+380660123456"
          }
        }
      },

      "FriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "news": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Backend-generated unique identifier."
                  },
                  "title": {
                    "type": "string",
                    "description": "Title friend"
                  },
                  "url": {
                    "type": "string",
                    "description": "Web site URL."
                  },
                  "addressUrl": {
                    "type": "string",
                    "description": "Url friend position on map"
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "Path to logo friend"
                  },
                  "address": {
                    "type": "string",
                    "description": "Addres friend"
                  },
                  "workDays": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "isOpen": {
                          "type": "boolean",
                          "description": "Status friend"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "totalCount": {
              "type": "string",
              "description": "Total count records in DB"
            },
            "page": {
              "type": "integer",
              "description": "Page number"
            },
            "perPage": {
              "type": "integer",
              "description": "Items per page"
            }
          }
        },
        "example": [
          {
            "friends": [
              {
                "_id": "64bed4eb900a46840a8aff2d",
                "title": "Притулок для бездомних тварин 'Сіріус'",
                "url": "https://dogcat.com.ua",
                "addressUrl": "https://goo.gl/maps/iq8NXEUf31EAQCzc6",
                "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png",
                "address": "Fedorivka, Kyiv Oblast, Ukraine, 07372",
                "workDays": [
                  {
                    "isOpen": false
                  },
                  {
                    "isOpen": false
                  },
                  {
                    "isOpen": false
                  },
                  {
                    "isOpen": false
                  },
                  {
                    "isOpen": false
                  },
                  {
                    "isOpen": true,
                    "from": "11:00",
                    "to": "16:00"
                  },
                  {
                    "isOpen": true,
                    "from": "11:00",
                    "to": "16:00"
                  }
                ],
                "phone": "+380931934069",
                "email": null
              },
              {
                "_id": "64bed4eb900a46840a8aff2e",
                "title": "Happy Paw",
                "url": "https://happypaw.ua/ua",
                "addressUrl": "https://goo.gl/maps/3RyzTYBvMr9WQWCC6",
                "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_288.png",
                "address": "Київ, вулиця Шота Руставелі, 44 (3-й поверх, офіс 7)",
                "workDays": [
                  {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "17:00"
                  },
                  {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "17:00"
                  },
                  {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "17:00"
                  },
                  {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "17:00"
                  },
                  {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "17:00"
                  },
                  {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "17:00"
                  },
                  {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "17:00"
                  }
                ],
                "phone": "+380442900329",
                "email": "hello@happypaw.ua"
              }
            ],
            "totalCount": 48,
            "page": "1",
            "perPage": "2"
          }
        ]
      },
      "NewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "news": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Backend-generated unique identifier."
                  },
                  "imgUrl": {
                    "type": "string",
                    "description": "Path to img."
                  },
                  "title": {
                    "type": "string",
                    "description": "Title news"
                  },
                  "text": {
                    "type": "string",
                    "description": "Comments about news"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date where news created"
                  },
                  "url": {
                    "type": "string",
                    "description": "Path to text news"
                  },
                  "id": {
                    "type": "string",
                    "description": "Id news on parent web site "
                  }
                }
              }
            },
            "totalCount": {
              "type": "string",
              "description": "Total count records in DB"
            },
            "page": {
              "type": "integer",
              "description": "Page number"
            },
            "perPage": {
              "type": "integer",
              "description": "Items per page"
            }
          }
        },
        "example": [
          {
            "news": [
              {
                "_id": "64c21d5a5606e66f7eae1983",
                "imgUrl": "https://www.nytimes.com/images/2021/07/18/arts/18surfacing-pet-tube-thmpsn1/merlin_189296613_5ff83b6b-c0e4-44be-91eb-e967f5b5aba2-blog480.jpg",
                "title": "Vocabulary in Context: Exotic Pets",
                "text": "Test your vocabulary and reading comprehension with this quiz based on the Times article \"The Internets Exotic Pets, and the People Who Love Them.\"",
                "date": "2022-01-13T10:00:01+0000",
                "url": "https://www.nytimes.com/interactive/2022/01/13/learning/13VocabQuizLN.html",
                "id": "nyt://interactive/9c204162-4ad2-56b5-8805-d02a6d950ceb"
              },
              {
                "_id": "64c21d5a5606e66f7eae198f",
                "imgUrl": "https://www.nytimes.com/images/2022/04/12/world/12ukraine-blog-veterinarian/merlin_203762100_fe5248ef-595f-42bc-9151-457f2b2ed50c-blog480.jpg",
                "title": "Ukrainian refugees find shelter, and a hearty welcome for their pets, in Romania.",
                "text": "Viktor and Rachel Borovic had only two hours to prepare to flee their city. But they were clear about what was important to them.",
                "date": "2022-03-13T19:47:34+0000",
                "url": "https://www.nytimes.com/2022/03/13/world/europe/ukraine-romania-refugee-shelter-pets.html",
                "id": "nyt://article/553bdb02-72b9-50b2-a3ae-e8e4c83c19bb"
              },
              {
                "_id": "64c21d5a5606e66f7eae1990",
                "imgUrl": "https://www.nytimes.com/images/2022/04/17/magazine/17mag-LOR/17mag-LOR-blog480-v2.jpg",
                "title": "Rabbits Are Boring Pets. I Love Them Anyway.",
                "text": "My friends and family dont get it. All I can do is try to describe what its like to be with them, the moments Im not sure I can do without.",
                "date": "2022-04-12T09:00:13+0000",
                "url": "https://www.nytimes.com/2022/04/12/magazine/rabbits-pets.html",
                "id": "nyt://article/affcb8e8-70c5-5c3e-a289-3c56a763fb2e"
              }
            ],
            "totalCount": 48,
            "page": "2",
            "perPage": "3"
          }
        ]
      },

      "Unauthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "ServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Internal server error. \"message\" consist error's type ",
            "example": "invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0"
          }
        }
      }
    }
  }
}
