{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Connections API"
  },
  "consumers": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://fullstackforce.onrender.com/api"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operation about users"
    },
    {
      "name": "pet",
      "description": "Operation about pets"
    },
    {
      "name": "notice",
      "description": "Operation about notices"
    },
    {
      "name": "friend",
      "description": "Operation about friends"
    },
    {
      "name": "news",
      "description": "Operation about news"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["user"],
        "summary": "Add a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Provided email alredy exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["user"],
        "summary": "Login user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["user"],
        "summary": "Logout user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": null
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["user"],
        "summary": "Get information about current user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "patch": {
        "tags": ["user"],
        "summary": "Update information about current user and avatars",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchRequestWithFile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/pets": {
      "get": {
        "tags": ["pet"],
        "summary": "Get information about current user's pets",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "strings",
            "description": "Limit"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"password\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["pet"],
        "summary": "Add new a pet",
        "requestBody": {
          "content": null
        },
        "responses": null
      }
    },
    "/pets/:id": {
      "delete": {
        "tags": ["pet"],
        "summary": "Delete pet by petId ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Pet's id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": null
      }
    },

    "/notices": {
      "get": {
        "tags": ["notice"],
        "summary": "Get list all notices",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "strings",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "title",
            "required": true,
            "type": "strings",
            "description": "Title"
          },
          {
            "in": "query",
            "name": "category",
            "required": true,
            "type": "strings",
            "description": "Category"
          }
        ],
        "requestBody": {
          "content": null
        },
        "responses": null
      },
      "post": {
        "tags": ["notice"],
        "summary": "Add new notice",
        "requestBody": {
          "content": null
        },
        "responses": null
      }
    },
    "/notices/:id": {
      "get": {
        "tags": ["notice"],
        "summary": "Get notice by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Notice's id for get information"
          }
        ],
        "requestBody": {
          "content": null
        },
        "responses": null
      },
      "delete": {
        "tags": ["notice"],
        "summary": "Delete notice by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Notice's id for deleting"
          }
        ],
        "requestBody": {
          "content": null
        },
        "responses": null
      }
    },
    "/notices/users": {
      "get": {
        "tags": ["notice"],
        "summary": "Get list all notices created current user",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "strings",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "title",
            "required": true,
            "type": "strings",
            "description": "Title"
          },
          {
            "in": "query",
            "name": "category",
            "required": true,
            "type": "strings",
            "description": "Category"
          }
        ],
        "requestBody": {
          "content": null
        },
        "responses": null
      }
    },
    "/notices/favorites": {
      "get": {
        "tags": ["notice"],
        "summary": "Get list all favorites notices for current user",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "strings",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "title",
            "required": true,
            "type": "strings",
            "description": "Title"
          },
          {
            "in": "query",
            "name": "category",
            "required": true,
            "type": "strings",
            "description": "Category"
          }
        ],
        "requestBody": {
          "content": null
        },
        "responses": null
      }
    },
    "/notices/:id/favorites": {
      "patch": {
        "tags": ["notice"],
        "summary": "Add notice with ID to favorites collection current user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Notice's id for add to favorites collection current user"
          }
        ],
        "requestBody": {
          "content": null
        },
        "responses": null
      },
      "delete": {
        "tags": ["notice"],
        "summary": "Delete notice by ID from favorites collection current user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "strings",
            "description": "Notice's id for remove from favorites collection current user"
          }
        ],
        "requestBody": {
          "content": null
        },
        "responses": null
      }
    },

    "/friends": {
      "get": {
        "tags": ["friend"],
        "summary": "Get list friends",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "strings",
            "description": "Limit"
          }
        ],
        "requestBody": {
          "content": null
        },
        "responses": null
      }
    },

    "/news": {
      "get": {
        "tags": ["news"],
        "summary": "Get list friends",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "strings",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "strings",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "title",
            "required": false,
            "type": "strings",
            "description": "keyword from news title "
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthResponse"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserRegisterRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mango1"
          },
          "email": {
            "type": "string",
            "example": "mango1@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "Qwerty123"
          }
        }
      },
      "UserLoginRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "mango5@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "123457"
          }
        }
      },
      "UserAuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YmJhMzlkMTM4ZmVjMDBhZGRlMmI0NyIsImlhdCI6MTY5MDI4ODA5NywiZXhwIjoxNjkwMzc0NDk3fQ.JTsGap1ZHv3lrwvTHhbApAQrC4ED_l0DH40yDYtINhk"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Mango1"
              },
              "email": {
                "type": "string",
                "example": "mango1@gmail.com",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "example": "https://res.cloudinary.com/duz0fredh/image/upload/v1690286198/users/64bba39d138fec00adde2b47_.jpg"
              }
            }
          }
        }
      },
      "UserPatchRequest": {
        "required": ["name", "email"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mango1"
          },
          "email": {
            "type": "string",
            "example": "mango1@gmail.com",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "phone": {
            "type": "string",
            "example": "+380000000000"
          },
          "city": {
            "type": "string",
            "example": "Kiev"
          }
        }
      },
      "UserPatchRequestWithFile": {
        "required": ["name", "email"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mango1"
          },
          "email": {
            "type": "string",
            "example": "mango1@gmail.com",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "phone": {
            "type": "string",
            "example": "+380000000000"
          },
          "city": {
            "type": "string",
            "example": "Kiev"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UserPatchResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mango1"
          },
          "email": {
            "type": "string",
            "example": "mango1@gmail.com",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "phone": {
            "type": "string",
            "example": "+380000000000"
          },
          "city": {
            "type": "string",
            "example": "Kiev"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png"
          }
        }
      },

      "PetResponse": {
        "required": ["options", "name"],
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Backend-generated unique identifier."
            },
            "ownerId": {
              "type": "string",
              "description": "Backend get from token user."
            },
            "name": {
              "type": "string"
            },
            "birthday": {
              "type": "string",
              "description": "тут треба подумати чи дату чи техт"
            },
            "type": {
              "type": "string",
              "description": "breed of animal"
            },
            "avatarURL": {
              "type": "string"
            },
            "comments": {
              "type": "string"
            }
          },
          "example": [
            {
              "_id": "64bbc0c90d50f7d0800e272a",
              "owner": "64bba39d138fec00adde2b47",
              "name": "Vista",
              "birthday": "01.01.2001",
              "type": "Pers",
              "comments": "",
              "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png"
            },
            {
              "_id": "64bbc8a9580ab0914768a763",
              "owner": "64bba39d138fec00adde2b47",
              "name": "Vista",
              "birthday": "01.01.2001",
              "type": "Pers",
              "comments": "",
              "avatarURL": "https://res.cloudinary.com/duz0fredh/image/upload/v1690018006/default/avatarUser.png"
            }
          ]
        }
      },
      "Notice": {
        "required": ["options", "name", "sex"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Backend-generated unique identifier."
          },
          "ownerId": {
            "type": "string",
            "description": "Backend get from token user."
          },
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"]
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "birthday of animal"
          },
          "type": {
            "type": "string",
            "description": "breed of animal"
          },
          "avatarURL": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "example": "Cute dog looking for a home"
          },
          "comments": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": ["f", "m"]
          },
          "price": {
            "type": "number"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      }
    }
  }
}
